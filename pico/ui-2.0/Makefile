#############################################################################
# Makefile for building: pico
# Generated by qmake (2.01a) (Qt 4.7.0) on: Fri Oct 14 15:16:01 2011
# Project:  pico.pro
# Template: app
# Command: /opt/testfac/qt/qt/bin/qmake -o Makefile pico.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/opt/testfac/qt/qt/mkspecs/linux-g++ -I. -I/opt/testfac/qt/qt/include/QtCore -I/opt/testfac/qt/qt/include/QtGui -I/opt/testfac/qt/qt/include -I../../motor/ui -I../../../qt/myPlugins/widgets -I../../../epicsQt/R1.1.6.2/ca_framework/plugins/include -I../../../epicsQt/R1.1.6.2/ca_framework/widgets/include -I../../../epicsQt/R1.1.6.2/ca_framework/api/include -I../../../epicsQt/R1.1.6.2/ca_framework/data/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/opt/testfac/qt/qt/lib
LIBS          = $(SUBLIBS)  -L/opt/testfac/qt/qt/lib -L/afs/slac/g/testfac/tools/epicsQt/R1.1.6.2/ca_framework/plugins -lQCaPlugin -L/opt/testfac/qt/qt/plugins/designer -lmyPlugin -lQtGui -L/opt/testfac/qt/qt/lib -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/testfac/qt/qt/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		picomotor.cpp \
		helpbrowser.cpp \
		mrecord.cpp \
		../../motor/ui/motordialog.cpp \
		../../motor/ui/motordetails.cpp moc_mainwindow.cpp \
		moc_picomotor.cpp \
		moc_helpbrowser.cpp \
		moc_mrecord.cpp \
		moc_motordialog.cpp \
		moc_motordetails.cpp \
		qrc_pico.cpp
OBJECTS       = main.o \
		mainwindow.o \
		picomotor.o \
		helpbrowser.o \
		mrecord.o \
		motordialog.o \
		motordetails.o \
		moc_mainwindow.o \
		moc_picomotor.o \
		moc_helpbrowser.o \
		moc_mrecord.o \
		moc_motordialog.o \
		moc_motordetails.o \
		qrc_pico.o
DIST          = /opt/testfac/qt/qt/mkspecs/common/g++.conf \
		/opt/testfac/qt/qt/mkspecs/common/unix.conf \
		/opt/testfac/qt/qt/mkspecs/common/linux.conf \
		/opt/testfac/qt/qt/mkspecs/qconfig.pri \
		/opt/testfac/qt/qt/mkspecs/modules/qt_webkit_version.pri \
		/opt/testfac/qt/qt/mkspecs/features/qt_functions.prf \
		/opt/testfac/qt/qt/mkspecs/features/qt_config.prf \
		/opt/testfac/qt/qt/mkspecs/features/exclusive_builds.prf \
		/opt/testfac/qt/qt/mkspecs/features/default_pre.prf \
		/opt/testfac/qt/qt/mkspecs/features/release.prf \
		/opt/testfac/qt/qt/mkspecs/features/default_post.prf \
		/opt/testfac/qt/qt/mkspecs/features/warn_on.prf \
		/opt/testfac/qt/qt/mkspecs/features/qt.prf \
		/opt/testfac/qt/qt/mkspecs/features/unix/thread.prf \
		/opt/testfac/qt/qt/mkspecs/features/moc.prf \
		/opt/testfac/qt/qt/mkspecs/features/resources.prf \
		/opt/testfac/qt/qt/mkspecs/features/uic.prf \
		/opt/testfac/qt/qt/mkspecs/features/yacc.prf \
		/opt/testfac/qt/qt/mkspecs/features/lex.prf \
		/opt/testfac/qt/qt/mkspecs/features/include_source_dir.prf \
		pico.pro
QMAKE_TARGET  = pico
DESTDIR       = 
TARGET        = pico

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_picomotor.h ui_mrecord.h ui_motordialog.h ui_motordetails.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pico.pro  /opt/testfac/qt/qt/mkspecs/linux-g++/qmake.conf /opt/testfac/qt/qt/mkspecs/common/g++.conf \
		/opt/testfac/qt/qt/mkspecs/common/unix.conf \
		/opt/testfac/qt/qt/mkspecs/common/linux.conf \
		/opt/testfac/qt/qt/mkspecs/qconfig.pri \
		/opt/testfac/qt/qt/mkspecs/modules/qt_webkit_version.pri \
		/opt/testfac/qt/qt/mkspecs/features/qt_functions.prf \
		/opt/testfac/qt/qt/mkspecs/features/qt_config.prf \
		/opt/testfac/qt/qt/mkspecs/features/exclusive_builds.prf \
		/opt/testfac/qt/qt/mkspecs/features/default_pre.prf \
		/opt/testfac/qt/qt/mkspecs/features/release.prf \
		/opt/testfac/qt/qt/mkspecs/features/default_post.prf \
		/opt/testfac/qt/qt/mkspecs/features/warn_on.prf \
		/opt/testfac/qt/qt/mkspecs/features/qt.prf \
		/opt/testfac/qt/qt/mkspecs/features/unix/thread.prf \
		/opt/testfac/qt/qt/mkspecs/features/moc.prf \
		/opt/testfac/qt/qt/mkspecs/features/resources.prf \
		/opt/testfac/qt/qt/mkspecs/features/uic.prf \
		/opt/testfac/qt/qt/mkspecs/features/yacc.prf \
		/opt/testfac/qt/qt/mkspecs/features/lex.prf \
		/opt/testfac/qt/qt/mkspecs/features/include_source_dir.prf \
		/opt/testfac/qt/qt/lib/libQtGui.prl \
		/opt/testfac/qt/qt/lib/libQtCore.prl
	$(QMAKE) -o Makefile pico.pro
/opt/testfac/qt/qt/mkspecs/common/g++.conf:
/opt/testfac/qt/qt/mkspecs/common/unix.conf:
/opt/testfac/qt/qt/mkspecs/common/linux.conf:
/opt/testfac/qt/qt/mkspecs/qconfig.pri:
/opt/testfac/qt/qt/mkspecs/modules/qt_webkit_version.pri:
/opt/testfac/qt/qt/mkspecs/features/qt_functions.prf:
/opt/testfac/qt/qt/mkspecs/features/qt_config.prf:
/opt/testfac/qt/qt/mkspecs/features/exclusive_builds.prf:
/opt/testfac/qt/qt/mkspecs/features/default_pre.prf:
/opt/testfac/qt/qt/mkspecs/features/release.prf:
/opt/testfac/qt/qt/mkspecs/features/default_post.prf:
/opt/testfac/qt/qt/mkspecs/features/warn_on.prf:
/opt/testfac/qt/qt/mkspecs/features/qt.prf:
/opt/testfac/qt/qt/mkspecs/features/unix/thread.prf:
/opt/testfac/qt/qt/mkspecs/features/moc.prf:
/opt/testfac/qt/qt/mkspecs/features/resources.prf:
/opt/testfac/qt/qt/mkspecs/features/uic.prf:
/opt/testfac/qt/qt/mkspecs/features/yacc.prf:
/opt/testfac/qt/qt/mkspecs/features/lex.prf:
/opt/testfac/qt/qt/mkspecs/features/include_source_dir.prf:
/opt/testfac/qt/qt/lib/libQtGui.prl:
/opt/testfac/qt/qt/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile pico.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/pico1.0.0 || $(MKDIR) .tmp/pico1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/pico1.0.0/ && $(COPY_FILE) --parents mainwindow.h picomotor.h helpbrowser.h mrecord.h ../../motor/ui/motordialog.h ../../motor/ui/motordetails.h .tmp/pico1.0.0/ && $(COPY_FILE) --parents pico.qrc .tmp/pico1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp picomotor.cpp helpbrowser.cpp mrecord.cpp ../../motor/ui/motordialog.cpp ../../motor/ui/motordetails.cpp .tmp/pico1.0.0/ && $(COPY_FILE) --parents picomotor.ui mrecord.ui ../../motor/ui/motordialog.ui ../../motor/ui/motordetails.ui .tmp/pico1.0.0/ && (cd `dirname .tmp/pico1.0.0` && $(TAR) pico1.0.0.tar pico1.0.0 && $(COMPRESS) pico1.0.0.tar) && $(MOVE) `dirname .tmp/pico1.0.0`/pico1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/pico1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_picomotor.cpp moc_helpbrowser.cpp moc_mrecord.cpp moc_motordialog.cpp moc_motordetails.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_picomotor.cpp moc_helpbrowser.cpp moc_mrecord.cpp moc_motordialog.cpp moc_motordetails.cpp
moc_mainwindow.cpp: mainwindow.h
	/opt/testfac/qt/qt/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_picomotor.cpp: ui_picomotor.h \
		picomotor.h
	/opt/testfac/qt/qt/bin/moc $(DEFINES) $(INCPATH) picomotor.h -o moc_picomotor.cpp

moc_helpbrowser.cpp: helpbrowser.h
	/opt/testfac/qt/qt/bin/moc $(DEFINES) $(INCPATH) helpbrowser.h -o moc_helpbrowser.cpp

moc_mrecord.cpp: ui_mrecord.h \
		mrecord.h
	/opt/testfac/qt/qt/bin/moc $(DEFINES) $(INCPATH) mrecord.h -o moc_mrecord.cpp

moc_motordialog.cpp: ../../motor/ui/motordialog.h
	/opt/testfac/qt/qt/bin/moc $(DEFINES) $(INCPATH) ../../motor/ui/motordialog.h -o moc_motordialog.cpp

moc_motordetails.cpp: ../../motor/ui/motordetails.h
	/opt/testfac/qt/qt/bin/moc $(DEFINES) $(INCPATH) ../../motor/ui/motordetails.h -o moc_motordetails.cpp

compiler_rcc_make_all: qrc_pico.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_pico.cpp
qrc_pico.cpp: pico.qrc \
		qss/new.png \
		qss/document.png \
		qss/myStyle.qss \
		qss/motor.png \
		qss/open.png \
		qss/picoStyle.qss
	/opt/testfac/qt/qt/bin/rcc -name pico pico.qrc -o qrc_pico.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_picomotor.h ui_mrecord.h ui_motordialog.h ui_motordetails.h
compiler_uic_clean:
	-$(DEL_FILE) ui_picomotor.h ui_mrecord.h ui_motordialog.h ui_motordetails.h
ui_picomotor.h: picomotor.ui
	/opt/testfac/qt/qt/bin/uic picomotor.ui -o ui_picomotor.h

ui_mrecord.h: mrecord.ui
	/opt/testfac/qt/qt/bin/uic mrecord.ui -o ui_mrecord.h

ui_motordialog.h: ../../motor/ui/motordialog.ui
	/opt/testfac/qt/qt/bin/uic ../../motor/ui/motordialog.ui -o ui_motordialog.h

ui_motordetails.h: ../../motor/ui/motordetails.ui
	/opt/testfac/qt/qt/bin/uic ../../motor/ui/motordetails.ui -o ui_motordetails.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp picomotor.h \
		ui_picomotor.h \
		mainwindow.h \
		helpbrowser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

picomotor.o: picomotor.cpp picomotor.h \
		ui_picomotor.h \
		mrecord.h \
		ui_mrecord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o picomotor.o picomotor.cpp

helpbrowser.o: helpbrowser.cpp helpbrowser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helpbrowser.o helpbrowser.cpp

mrecord.o: mrecord.cpp mrecord.h \
		ui_mrecord.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mrecord.o mrecord.cpp

motordialog.o: ../../motor/ui/motordialog.cpp ../../motor/ui/motordialog.h \
		../../motor/ui/ui_motordialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o motordialog.o ../../motor/ui/motordialog.cpp

motordetails.o: ../../motor/ui/motordetails.cpp ../../motor/ui/motordetails.h \
		../../motor/ui/ui_motordetails.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o motordetails.o ../../motor/ui/motordetails.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_picomotor.o: moc_picomotor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_picomotor.o moc_picomotor.cpp

moc_helpbrowser.o: moc_helpbrowser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_helpbrowser.o moc_helpbrowser.cpp

moc_mrecord.o: moc_mrecord.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mrecord.o moc_mrecord.cpp

moc_motordialog.o: moc_motordialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_motordialog.o moc_motordialog.cpp

moc_motordetails.o: moc_motordetails.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_motordetails.o moc_motordetails.cpp

qrc_pico.o: qrc_pico.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_pico.o qrc_pico.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

